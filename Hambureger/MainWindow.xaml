<Window x:Class="Hambureger.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Hambureger"
        xmlns:hamControlers="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="HamburgerMenuStyle1" TargetType="{x:Type hamControlers:HamburgerMenu}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="HamburgerMenuTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl Content="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" Height="22" Style="{DynamicResource PathIconContentControlStyle}" Width="22"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="hamControlers:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}"/>
                        <Setter Property="FocusVisualStyle" Value="{Binding ItemFocusVisualStyle, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type hamControlers:HamburgerMenu}}}"/>
                        <Setter Property="Foreground" Value="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="IsEnabled" Value="{Binding IsEnabled, FallbackValue=true, Mode=OneWay}"/>
                        <Setter Property="IsTabStop" Value="{Binding IsTabStop, FallbackValue=True, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type hamControlers:HamburgerMenu}}}"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="MinHeight" Value="0"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Grid Margin="{TemplateBinding BorderThickness}">
                                            <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                                                <Grid.Visibility>
                                                    <Binding Mode="OneWay" Path="ShowSelectionIndicator" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type hamControlers:HamburgerMenu}}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </Grid.Visibility>
                                                <Rectangle x:Name="SelectionIndicator" Focusable="False" Fill="{TemplateBinding Foreground}" Height="{DynamicResource HamburgerMenuSelectionIndicatorThemeHeight}" Opacity="0" Width="{DynamicResource HamburgerMenuSelectionIndicatorThemeWidth}"/>
                                            </Grid>
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.SelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.SelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Setter Property="Opacity" TargetName="SelectionIndicator" Value="1"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.HoverBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.DisabledForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.DisabledBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEnabled" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="hamControlers:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}"/>
                                <Setter Property="hamControlers:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}"/>
                                <Setter Property="hamControlers:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}"/>
                                <Setter Property="hamControlers:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}"/>
                                <Setter Property="hamControlers:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}"/>
                                <Setter Property="hamControlers:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}"/>
                                <Setter Property="hamControlers:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}"/>
                                <Setter Property="hamControlers:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}"/>
                                <Setter Property="hamControlers:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, FallbackValue=Stretch, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="Padding" Value="5,0,0,0"/>
                                <Setter Property="RenderOptions.ClearTypeHint" Value="{Binding (RenderOptions.ClearTypeHint), FallbackValue=Auto, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Grid Margin="{TemplateBinding BorderThickness}">
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.SelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.SelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="IsSelected" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.HoverBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.DisabledForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.DisabledBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsEnabled" Value="False"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, FallbackValue=Center, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Local"/>
            <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Local"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
            <Setter Property="OptionsItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="hamControlers:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}"/>
                        <Setter Property="FocusVisualStyle" Value="{Binding ItemFocusVisualStyle, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type hamControlers:HamburgerMenu}}}"/>
                        <Setter Property="Foreground" Value="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="IsEnabled" Value="{Binding IsEnabled, FallbackValue=true, Mode=OneWay}"/>
                        <Setter Property="IsTabStop" Value="{Binding IsTabStop, FallbackValue=True, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type hamControlers:HamburgerMenu}}}"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="MinHeight" Value="0"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Grid Margin="{TemplateBinding BorderThickness}">
                                            <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                                                <Grid.Visibility>
                                                    <Binding Mode="OneWay" Path="ShowSelectionIndicator" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type hamControlers:HamburgerMenu}}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </Grid.Visibility>
                                                <Rectangle x:Name="SelectionIndicator" Focusable="False" Fill="{TemplateBinding Foreground}" Height="{DynamicResource HamburgerMenuSelectionIndicatorThemeHeight}" Opacity="0" Width="{DynamicResource HamburgerMenuSelectionIndicatorThemeWidth}"/>
                                            </Grid>
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.SelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.SelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Setter Property="Opacity" TargetName="SelectionIndicator" Value="1"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.HoverBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.DisabledForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.DisabledBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEnabled" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="hamControlers:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}"/>
                                <Setter Property="hamControlers:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}"/>
                                <Setter Property="hamControlers:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}"/>
                                <Setter Property="hamControlers:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}"/>
                                <Setter Property="hamControlers:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}"/>
                                <Setter Property="hamControlers:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}"/>
                                <Setter Property="hamControlers:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}"/>
                                <Setter Property="hamControlers:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}"/>
                                <Setter Property="hamControlers:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, FallbackValue=Stretch, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="Padding" Value="5,0,0,0"/>
                                <Setter Property="RenderOptions.ClearTypeHint" Value="{Binding (RenderOptions.ClearTypeHint), FallbackValue=Auto, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Grid Margin="{TemplateBinding BorderThickness}">
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.SelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.SelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="IsSelected" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.HoverBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.DisabledForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.DisabledBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsEnabled" Value="False"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{Binding (hamControlers:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                    <Setter Property="Background" TargetName="Border" Value="{Binding (hamControlers:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, FallbackValue=Center, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="PaneBackground" Value="{DynamicResource MahApps.Metro.HamburgerMenu.PaneBackgroundBrush}"/>
            <Setter Property="PaneForeground" Value="{DynamicResource MahApps.Metro.HamburgerMenu.PaneForegroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type hamControlers:HamburgerMenu}">
                        <Grid>
                            <hamControlers:SplitView x:Name="MainSplitView" CompactPaneLength="{TemplateBinding CompactPaneLength}" DisplayMode="{TemplateBinding DisplayMode}" IsTabStop="False" IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OpenPaneLength="{TemplateBinding OpenPaneLength}" PanePlacement="{TemplateBinding PanePlacement}" PaneBackground="{TemplateBinding PaneBackground}" PaneForeground="{TemplateBinding PaneForeground}">
                                <hamControlers:SplitView.Pane>
                                    <Grid x:Name="PaneGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <DockPanel x:Name="PaneHeader" Height="{TemplateBinding HamburgerHeight}" LastChildFill="True" Margin="0,0,0,8" Grid.Row="0">
                                            <Grid x:Name="PaneHeaderGap" DockPanel.Dock="Left" Width="{TemplateBinding HamburgerWidth}"/>
                                            <ContentControl x:Name="PaneHeaderContent" ContentTemplate="{TemplateBinding HamburgerMenuHeaderTemplate}" IsTabStop="False"/>
                                        </DockPanel>
                                        <ListBox x:Name="ButtonsListView" Foreground="{TemplateBinding PaneForeground}" ItemTemplate="{TemplateBinding ItemTemplate}" ItemContainerStyle="{TemplateBinding ItemContainerStyle}" AutomationProperties.Name="Menu items" Grid.Row="1" SelectionMode="Single" TabIndex="1" ScrollViewer.VerticalScrollBarVisibility="Auto" hamControlers:ScrollViewerHelper.VerticalScrollBarOnLeftSide="{TemplateBinding VerticalScrollBarOnLeftSide}" Width="{TemplateBinding OpenPaneLength}">
                                            <ListBox.Style>
                                                <Style TargetType="{x:Type ListBox}">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBox}">
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                    <ScrollViewer CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" hamControlers:ScrollViewerHelper.VerticalScrollBarOnLeftSide="{TemplateBinding hamControlers:ScrollViewerHelper.VerticalScrollBarOnLeftSide}">
                                                                        <ScrollViewer.Style>
                                                                            <Style TargetType="{x:Type ScrollViewer}">
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                                                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                                                                                <Grid.ColumnDefinitions>
                                                                                                    <ColumnDefinition x:Name="leftColumn" Width="*"/>
                                                                                                    <ColumnDefinition x:Name="rightColumn" Width="Auto"/>
                                                                                                </Grid.ColumnDefinitions>
                                                                                                <Grid.RowDefinitions>
                                                                                                    <RowDefinition Height="*"/>
                                                                                                    <RowDefinition Height="Auto"/>
                                                                                                </Grid.RowDefinitions>
                                                                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                                                                                                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.ColumnSpan="2" Grid.Column="0" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Opacity="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                                                                                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Opacity="0" Orientation="Horizontal" Grid.Row="0" Grid.RowSpan="2" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" VerticalAlignment="Bottom"/>
                                                                                            </Grid>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="hamControlers:ScrollViewerHelper.VerticalScrollBarOnLeftSide" Value="True">
                                                                                                    <Setter Property="Grid.Column" TargetName="PART_HorizontalScrollBar" Value="1"/>
                                                                                                    <Setter Property="Grid.Column" TargetName="PART_ScrollContentPresenter" Value="1"/>
                                                                                                    <Setter Property="HorizontalAlignment" TargetName="PART_VerticalScrollBar" Value="Left"/>
                                                                                                    <Setter Property="Width" TargetName="leftColumn" Value="Auto"/>
                                                                                                    <Setter Property="Width" TargetName="rightColumn" Value="*"/>
                                                                                                </Trigger>
                                                                                                <MultiDataTrigger>
                                                                                                    <MultiDataTrigger.Conditions>
                                                                                                        <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                                        <Condition Binding="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource Self}}" Value="Visible"/>
                                                                                                        <Condition Binding="{Binding IsPaneOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type hamControlers:SplitView}}}" Value="True"/>
                                                                                                    </MultiDataTrigger.Conditions>
                                                                                                    <MultiDataTrigger.EnterActions>
                                                                                                        <BeginStoryboard>
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                                                                                                                    <DoubleAnimation.EasingFunction>
                                                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                                                    </DoubleAnimation.EasingFunction>
                                                                                                                </DoubleAnimation>
                                                                                                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                                                                                                                    <DoubleAnimation.EasingFunction>
                                                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                                                    </DoubleAnimation.EasingFunction>
                                                                                                                </DoubleAnimation>
                                                                                                            </Storyboard>
                                                                                                        </BeginStoryboard>
                                                                                                    </MultiDataTrigger.EnterActions>
                                                                                                    <MultiDataTrigger.ExitActions>
                                                                                                        <BeginStoryboard>
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimation BeginTime="0:0:1" Duration="0:0:0.5" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                                                                                                                    <DoubleAnimation.EasingFunction>
                                                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                                                    </DoubleAnimation.EasingFunction>
                                                                                                                </DoubleAnimation>
                                                                                                                <DoubleAnimation BeginTime="0:0:1" Duration="0:0:0.5" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                                                                                                                    <DoubleAnimation.EasingFunction>
                                                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                                                    </DoubleAnimation.EasingFunction>
                                                                                                                </DoubleAnimation>
                                                                                                            </Storyboard>
                                                                                                        </BeginStoryboard>
                                                                                                    </MultiDataTrigger.ExitActions>
                                                                                                </MultiDataTrigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Style.BasedOn>
                                                                                    <Style TargetType="{x:Type ScrollViewer}">
                                                                                        <Setter Property="hamControlers:ScrollViewerHelper.VerticalScrollBarOnLeftSide" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                                                                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                                                                                        <Grid.ColumnDefinitions>
                                                                                                            <ColumnDefinition x:Name="leftColumn" Width="*"/>
                                                                                                            <ColumnDefinition x:Name="rightColumn" Width="Auto"/>
                                                                                                        </Grid.ColumnDefinitions>
                                                                                                        <Grid.RowDefinitions>
                                                                                                            <RowDefinition Height="*"/>
                                                                                                            <RowDefinition Height="Auto"/>
                                                                                                        </Grid.RowDefinitions>
                                                                                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                                                                                                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                                                                                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                                                                    </Grid>
                                                                                                    <ControlTemplate.Triggers>
                                                                                                        <Trigger Property="hamControlers:ScrollViewerHelper.VerticalScrollBarOnLeftSide" Value="True">
                                                                                                            <Setter Property="Grid.Column" TargetName="PART_HorizontalScrollBar" Value="1"/>
                                                                                                            <Setter Property="Grid.Column" TargetName="PART_ScrollContentPresenter" Value="1"/>
                                                                                                            <Setter Property="Grid.Column" TargetName="PART_VerticalScrollBar" Value="0"/>
                                                                                                            <Setter Property="Width" TargetName="leftColumn" Value="Auto"/>
                                                                                                            <Setter Property="Width" TargetName="rightColumn" Value="*"/>
                                                                                                        </Trigger>
                                                                                                    </ControlTemplate.Triggers>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Style.BasedOn>
                                                                            </Style>
                                                                        </ScrollViewer.Style>
                                                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    </ScrollViewer>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsGrouping" Value="False">
                                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="False"/>
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type ListBox}">
                                                            <Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
                                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                                            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                            <ScrollViewer CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                            </ScrollViewer>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsGrouping" Value="False">
                                                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush9}"/>
                                                                </Trigger>
                                                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                                                                    <Setter Property="ItemsPanel">
                                                                        <Setter.Value>
                                                                            <ItemsPanelTemplate>
                                                                                <VirtualizingStackPanel IsItemsHost="True"/>
                                                                            </ItemsPanelTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                            </ListBox.Style>
                                        </ListBox>
                                        <ListBox x:Name="OptionsListView" Foreground="{TemplateBinding PaneForeground}" ItemTemplate="{TemplateBinding OptionsItemTemplate}" ItemContainerStyle="{TemplateBinding OptionsItemContainerStyle}" Margin="0,20,0,8" AutomationProperties.Name="Option items" Grid.Row="2" SelectionMode="Single" TabIndex="2" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalAlignment="Bottom" Width="{TemplateBinding OpenPaneLength}">
                                            <ListBox.Style>
                                                <Style TargetType="{x:Type ListBox}">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBox}">
                                                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                    <ScrollViewer CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" hamControlers:ScrollViewerHelper.VerticalScrollBarOnLeftSide="{TemplateBinding hamControlers:ScrollViewerHelper.VerticalScrollBarOnLeftSide}">
                                                                        <ScrollViewer.Style>
                                                                            <Style TargetType="{x:Type ScrollViewer}">
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                                                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                                                                                <Grid.ColumnDefinitions>
                                                                                                    <ColumnDefinition x:Name="leftColumn" Width="*"/>
                                                                                                    <ColumnDefinition x:Name="rightColumn" Width="Auto"/>
                                                                                                </Grid.ColumnDefinitions>
                                                                                                <Grid.RowDefinitions>
                                                                                                    <RowDefinition Height="*"/>
                                                                                                    <RowDefinition Height="Auto"/>
                                                                                                </Grid.RowDefinitions>
                                                                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                                                                                                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.ColumnSpan="2" Grid.Column="0" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Opacity="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                                                                                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Opacity="0" Orientation="Horizontal" Grid.Row="0" Grid.RowSpan="2" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" VerticalAlignment="Bottom"/>
                                                                                            </Grid>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="hamControlers:ScrollViewerHelper.VerticalScrollBarOnLeftSide" Value="True">
                                                                                                    <Setter Property="Grid.Column" TargetName="PART_HorizontalScrollBar" Value="1"/>
                                                                                                    <Setter Property="Grid.Column" TargetName="PART_ScrollContentPresenter" Value="1"/>
                                                                                                    <Setter Property="HorizontalAlignment" TargetName="PART_VerticalScrollBar" Value="Left"/>
                                                                                                    <Setter Property="Width" TargetName="leftColumn" Value="Auto"/>
                                                                                                    <Setter Property="Width" TargetName="rightColumn" Value="*"/>
                                                                                                </Trigger>
                                                                                                <MultiDataTrigger>
                                                                                                    <MultiDataTrigger.Conditions>
                                                                                                        <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                                        <Condition Binding="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource Self}}" Value="Visible"/>
                                                                                                        <Condition Binding="{Binding IsPaneOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type hamControlers:SplitView}}}" Value="True"/>
                                                                                                    </MultiDataTrigger.Conditions>
                                                                                                    <MultiDataTrigger.EnterActions>
                                                                                                        <BeginStoryboard>
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                                                                                                                    <DoubleAnimation.EasingFunction>
                                                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                                                    </DoubleAnimation.EasingFunction>
                                                                                                                </DoubleAnimation>
                                                                                                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                                                                                                                    <DoubleAnimation.EasingFunction>
                                                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                                                    </DoubleAnimation.EasingFunction>
                                                                                                                </DoubleAnimation>
                                                                                                            </Storyboard>
                                                                                                        </BeginStoryboard>
                                                                                                    </MultiDataTrigger.EnterActions>
                                                                                                    <MultiDataTrigger.ExitActions>
                                                                                                        <BeginStoryboard>
                                                                                                            <Storyboard>
                                                                                                                <DoubleAnimation BeginTime="0:0:1" Duration="0:0:0.5" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                                                                                                                    <DoubleAnimation.EasingFunction>
                                                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                                                    </DoubleAnimation.EasingFunction>
                                                                                                                </DoubleAnimation>
                                                                                                                <DoubleAnimation BeginTime="0:0:1" Duration="0:0:0.5" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                                                                                                                    <DoubleAnimation.EasingFunction>
                                                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                                                    </DoubleAnimation.EasingFunction>
                                                                                                                </DoubleAnimation>
                                                                                                            </Storyboard>
                                                                                                        </BeginStoryboard>
                                                                                                    </MultiDataTrigger.ExitActions>
                                                                                                </MultiDataTrigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Style.BasedOn>
                                                                                    <Style TargetType="{x:Type ScrollViewer}">
                                                                                        <Setter Property="hamControlers:ScrollViewerHelper.VerticalScrollBarOnLeftSide" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                                                                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                                                                                        <Grid.ColumnDefinitions>
                                                                                                            <ColumnDefinition x:Name="leftColumn" Width="*"/>
                                                                                                            <ColumnDefinition x:Name="rightColumn" Width="Auto"/>
                                                                                                        </Grid.ColumnDefinitions>
                                                                                                        <Grid.RowDefinitions>
                                                                                                            <RowDefinition Height="*"/>
                                                                                                            <RowDefinition Height="Auto"/>
                                                                                                        </Grid.RowDefinitions>
                                                                                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                                                                                                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                                                                                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                                                                    </Grid>
                                                                                                    <ControlTemplate.Triggers>
                                                                                                        <Trigger Property="hamControlers:ScrollViewerHelper.VerticalScrollBarOnLeftSide" Value="True">
                                                                                                            <Setter Property="Grid.Column" TargetName="PART_HorizontalScrollBar" Value="1"/>
                                                                                                            <Setter Property="Grid.Column" TargetName="PART_ScrollContentPresenter" Value="1"/>
                                                                                                            <Setter Property="Grid.Column" TargetName="PART_VerticalScrollBar" Value="0"/>
                                                                                                            <Setter Property="Width" TargetName="leftColumn" Value="Auto"/>
                                                                                                            <Setter Property="Width" TargetName="rightColumn" Value="*"/>
                                                                                                        </Trigger>
                                                                                                    </ControlTemplate.Triggers>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Style.BasedOn>
                                                                            </Style>
                                                                        </ScrollViewer.Style>
                                                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    </ScrollViewer>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsGrouping" Value="False">
                                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="False"/>
                                                    <Style.BasedOn>
                                                        <Style TargetType="{x:Type ListBox}">
                                                            <Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
                                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                                            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                            <ScrollViewer CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                            </ScrollViewer>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsGrouping" Value="False">
                                                                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush9}"/>
                                                                </Trigger>
                                                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                                                                    <Setter Property="ItemsPanel">
                                                                        <Setter.Value>
                                                                            <ItemsPanelTemplate>
                                                                                <VirtualizingStackPanel IsItemsHost="True"/>
                                                                            </ItemsPanelTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Style.BasedOn>
                                                </Style>
                                            </ListBox.Style>
                                        </ListBox>
                                    </Grid>
                                </hamControlers:SplitView.Pane>
                                <hamControlers:TransitioningContentControl x:Name="ContentPart" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" AutomationProperties.Name="Content" Padding="{TemplateBinding Padding}" RestartTransitionOnContentChange="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Transition="{TemplateBinding ContentTransition}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </hamControlers:SplitView>
                            <Button x:Name="HamburgerButton" ContentTemplate="{TemplateBinding HamburgerMenuTemplate}" Foreground="{TemplateBinding PaneForeground}" HorizontalAlignment="Left" Height="{TemplateBinding HamburgerHeight}" IsTabStop="{TemplateBinding IsTabStop}" Margin="0,0,0,8" AutomationProperties.Name="Main button" Padding="{TemplateBinding HamburgerMargin}" TabIndex="0" Visibility="{TemplateBinding HamburgerVisibility}" VerticalAlignment="Top" Width="{TemplateBinding HamburgerWidth}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                    <Grid Background="Transparent">
                                                        <Grid x:Name="PART_Background" Background="{TemplateBinding Background}" Opacity="0"/>
                                                        <ContentPresenter x:Name="PART_ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Opacity="0.75" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" TargetName="PART_Background" Value="0.3"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="1"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="Opacity" TargetName="PART_Background" Value="0"/>
                                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.75"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="#FFADADAD"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Style.BasedOn>
                                            <Style TargetType="{x:Type ButtonBase}">
                                                <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="Padding" Value="0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                            <Grid Background="{TemplateBinding Background}">
                                                                <ContentPresenter x:Name="PART_ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Opacity="0.75" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="1"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="False">
                                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.5"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="#FFADADAD"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            </Style>
                                        </Style.BasedOn>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="PanePlacement" Value="Right">
                                <Setter Property="HorizontalAlignment" TargetName="HamburgerButton" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="PaneHeaderGap" Value="Right"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="19*"/>
            <RowDefinition Height="86*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="179*"/>
            <ColumnDefinition Width="615*"/>
        </Grid.ColumnDefinitions>
        <hamControlers:HamburgerMenu Grid.Column="0" Grid.Row="1" Margin="2,2,2,4" Style="{DynamicResource HamburgerMenuStyle1}"
        x:Name="HamburgerMenuControl" Foreground="White" OpenPaneLength="240" DisplayMode="CompactInline" CompactPaneLength="46"
        HamburgerHeight="48" IsPaneOpen="False">
            
        </hamControlers:HamburgerMenu>
    </Grid>
</Window>
